passcap <- cars$passcap
lencar <- cars$lencar
wheelbase <- cars$wheelbase
width <- cars$width
Uturn <- cars$Uturn
rearseatroom <- cars$rearseatroom
luggagecap <- cars$luggagecap # missing values
weight <- cars$weight
domestic <- cars$domestic # discrete
cylinders <- as.numeric(cylinders)
mpg <- (cmpg + hmpg)/2
cars_cleaned = subset(cars, select =-c(1,2,3,9,10,22,23,24,16,7,8,26))
cars_numeric <- data.matrix(cars_cleaned, rownames.force = NA)
cars_numeric <- cbind(cars_numeric,mpg)
plot(cmpg, hmpg)
cor(cmpg,hmpg)
cor(cars_numeric, use = "pairwise.complete.obs")
badboys <- cars_numeric[1:length(mpg),c(7,10,15)]
pairs(badboys)
model1 <- step(lm(mpg~1), scope=(~minprice + midprice + maxprice + enginesize + horsepower + rpm + enginerev + fueltankcap + passcap + cylinders + lencar + wheelbase + width + Uturn + rearseatroom + weight + domestic), direction="both")
model1 <- step(lm(mpg~1), scope=(~minprice + midprice + maxprice + enginesize + horsepower + rpm + enginerev + fueltankcap + passcap + cylinders + lencar + wheelbase + width + Uturn + rearseatroom + weight + domestic), direction="both")
library(caret)
library(car)
library(olsrr)
library(psych)
cars <- read.table("A17-cars-win.dat", header = FALSE, col.names=c("manufacturer","model","type","minprice","midprice","maxprice", "cmpg", "hmpg", "airbags", "drivetrain", "cylinders", "engingesize", "horsepower", "rpm", "enginerev", "manualtransmissions", "fueltankcap", "passcap", "lencar", "wheelbase", "width", "uturn", "rearseatroom", "luggagecap", "weight", "domestic"))
MSEP <- function(factors, dt) {
sqsum <- 0
N <- dim(dt)[1]
for (i in 1:N) {
excluded_obs <- dt[i,]
excluded_mpg <- (excluded_obs[7] + excluded_obs[8])/2
if (is.na(excluded_obs[1])== FALSE) {
new_dt <- dt
new_dt[i,] <- NA
manufacturer <- new_dt$manufacturer
car_model <- new_dt$model
type <- new_dt$type
minprice <- new_dt$minprice
midprice <- new_dt$midprice
maxprice <- new_dt$maxprice
cmpg <- new_dt$cmpg
hmpg <- new_dt$hmpg
airbags <- new_dt$airbags # discrete
drivetrain <- new_dt$drivetrain # discrete
cylinders <- new_dt$cylinders # missing values
enginesize <- new_dt$enginesize
horsepower <- new_dt$horsepower
rpm <- new_dt$rpm
enginerev <- new_dt$enginerev
manualtransmissions <- new_dt$manualtransmissions # discrete
fueltankcap <- new_dt$fueltankcap
passcap <- new_dt$passcap
lencar <- new_dt$lencar
wheelbase <- new_dt$wheelbase
width <- new_dt$width
Uturn <- new_dt$Uturn
rearseatroom <- new_dt$rearseatroom
luggagecap <- new_dt$luggagecap # missing values
weight <- new_dt$weight
domestic <- new_dt$domestic # discrete
mpg <- (cmpg + hmpg)/2
modelform <- as.formula(paste("mpg~", paste(factors, collapse="+")))
model <- lm(modelform, data=new_dt, na.action = na.omit)
coef <- coefficients(model)
est_val <- coef[1]
for (j in 1:length(factors)) {
est_val <- est_val + coef[j + 1]*excluded_obs[which(colnames(dt)==factors[j])]
}
sqsum <- sqsum + (excluded_mpg-est_val)^2
}
}
MSEP <- sqsum/N
print(paste("mpg~", paste(factors, collapse="+")))
print(MSEP[1,])
}
manufacturer <- cars$manufacturer
car_model <- cars$model
type <- cars$type
minprice <- cars$minprice
midprice <- cars$midprice
maxprice <- cars$maxprice
cmpg <- cars$cmpg
hmpg <- cars$hmpg
airbags <- cars$airbags # discrete
drivetrain <- cars$drivetrain # discrete
cylinders <- cars$cylinders # missing values
enginesize <- cars$enginesize
horsepower <- cars$horsepower
rpm <- cars$rpm
enginerev <- cars$enginerev
manualtransmissions <- cars$manualtransmissions # discrete
fueltankcap <- cars$fueltankcap
passcap <- cars$passcap
lencar <- cars$lencar
wheelbase <- cars$wheelbase
width <- cars$width
Uturn <- cars$Uturn
rearseatroom <- cars$rearseatroom
luggagecap <- cars$luggagecap # missing values
weight <- cars$weight
domestic <- cars$domestic # discrete
cylinders <- as.numeric(cylinders)
mpg <- (cmpg + hmpg)/2
cars_cleaned = subset(cars, select =-c(1,2,3,9,10,22,23,24,16,7,8,26))
cars_numeric <- data.matrix(cars_cleaned, rownames.force = NA)
cars_numeric <- cbind(cars_numeric,mpg)
plot(cmpg, hmpg)
cor(cmpg,hmpg)
cor(cars_numeric, use = "pairwise.complete.obs")
badboys <- cars_numeric[1:length(mpg),c(7,10,15)]
pairs(badboys)
model1 <- step(lm(mpg~1), scope=(~minprice + midprice + maxprice + enginesize + horsepower + rpm + enginerev + fueltankcap + passcap + cylinders + lencar + wheelbase + width + Uturn + rearseatroom + weight + domestic), direction="both")
plot(cmpg, hmpg)
cor(cmpg,hmpg)
cor(cars_numeric, use = "pairwise.complete.obs")
badboys <- cars_numeric[1:length(mpg),c(7,10,15)]
pairs(badboys)
badboys <- cars_numeric[1:length(mpg),c(7,10,15)]
pairs(badboys)
cars
model1 <- step(lm(mpg~1), scope=(~minprice + midprice + maxprice + enginesize + horsepower + rpm + enginerev + fueltankcap + passcap + lencar + wheelbase + width + Uturn + rearseatroom + weight + domestic), direction="both")
library(caret)
library(car)
library(olsrr)
library(psych)
cars <- read.table("A17-cars-win.dat", header = FALSE, col.names=c("manufacturer","model","type","minprice","midprice","maxprice", "cmpg", "hmpg", "airbags", "drivetrain", "cylinders", "enginesize", "horsepower", "rpm", "enginerev", "manualtransmissions", "fueltankcap", "passcap", "lencar", "wheelbase", "width", "uturn", "rearseatroom", "luggagecap", "weight", "domestic"))
MSEP <- function(factors, dt) {
sqsum <- 0
N <- dim(dt)[1]
for (i in 1:N) {
excluded_obs <- dt[i,]
excluded_mpg <- (excluded_obs[7] + excluded_obs[8])/2
if (is.na(excluded_obs[1])== FALSE) {
new_dt <- dt
new_dt[i,] <- NA
manufacturer <- new_dt$manufacturer
car_model <- new_dt$model
type <- new_dt$type
minprice <- new_dt$minprice
midprice <- new_dt$midprice
maxprice <- new_dt$maxprice
cmpg <- new_dt$cmpg
hmpg <- new_dt$hmpg
airbags <- new_dt$airbags # discrete
drivetrain <- new_dt$drivetrain # discrete
cylinders <- new_dt$cylinders # missing values
enginesize <- new_dt$enginesize
horsepower <- new_dt$horsepower
rpm <- new_dt$rpm
enginerev <- new_dt$enginerev
manualtransmissions <- new_dt$manualtransmissions # discrete
fueltankcap <- new_dt$fueltankcap
passcap <- new_dt$passcap
lencar <- new_dt$lencar
wheelbase <- new_dt$wheelbase
width <- new_dt$width
Uturn <- new_dt$Uturn
rearseatroom <- new_dt$rearseatroom
luggagecap <- new_dt$luggagecap # missing values
weight <- new_dt$weight
domestic <- new_dt$domestic # discrete
mpg <- (cmpg + hmpg)/2
modelform <- as.formula(paste("mpg~", paste(factors, collapse="+")))
model <- lm(modelform, data=new_dt, na.action = na.omit)
coef <- coefficients(model)
est_val <- coef[1]
for (j in 1:length(factors)) {
est_val <- est_val + coef[j + 1]*excluded_obs[which(colnames(dt)==factors[j])]
}
sqsum <- sqsum + (excluded_mpg-est_val)^2
}
}
MSEP <- sqsum/N
print(paste("mpg~", paste(factors, collapse="+")))
print(MSEP[1,])
}
MSEP <- function(factors, dt) {
sqsum <- 0
N <- dim(dt)[1]
for (i in 1:N) {
excluded_obs <- dt[i,]
excluded_mpg <- (excluded_obs[7] + excluded_obs[8])/2
if (is.na(excluded_obs[1])== FALSE) {
new_dt <- dt
new_dt[i,] <- NA
manufacturer <- new_dt$manufacturer
car_model <- new_dt$model
type <- new_dt$type
minprice <- new_dt$minprice
midprice <- new_dt$midprice
maxprice <- new_dt$maxprice
cmpg <- new_dt$cmpg
hmpg <- new_dt$hmpg
airbags <- new_dt$airbags # discrete
drivetrain <- new_dt$drivetrain # discrete
cylinders <- new_dt$cylinders # missing values
enginesize <- new_dt$enginesize
horsepower <- new_dt$horsepower
rpm <- new_dt$rpm
enginerev <- new_dt$enginerev
manualtransmissions <- new_dt$manualtransmissions # discrete
fueltankcap <- new_dt$fueltankcap
passcap <- new_dt$passcap
lencar <- new_dt$lencar
wheelbase <- new_dt$wheelbase
width <- new_dt$width
Uturn <- new_dt$Uturn
rearseatroom <- new_dt$rearseatroom
luggagecap <- new_dt$luggagecap # missing values
weight <- new_dt$weight
domestic <- new_dt$domestic # discrete
mpg <- (cmpg + hmpg)/2
modelform <- as.formula(paste("mpg~", paste(factors, collapse="+")))
model <- lm(modelform, data=new_dt, na.action = na.omit)
coef <- coefficients(model)
est_val <- coef[1]
for (j in 1:length(factors)) {
est_val <- est_val + coef[j + 1]*excluded_obs[which(colnames(dt)==factors[j])]
}
sqsum <- sqsum + (excluded_mpg-est_val)^2
}
}
MSEP <- sqsum/N
print(paste("mpg~", paste(factors, collapse="+")))
print(MSEP[1,])
}
manufacturer <- cars$manufacturer
car_model <- cars$model
type <- cars$type
minprice <- cars$minprice
midprice <- cars$midprice
maxprice <- cars$maxprice
cmpg <- cars$cmpg
hmpg <- cars$hmpg
airbags <- cars$airbags # discrete
drivetrain <- cars$drivetrain # discrete
cylinders <- cars$cylinders # missing values
enginesize <- cars$enginesize
horsepower <- cars$horsepower
rpm <- cars$rpm
enginerev <- cars$enginerev
manualtransmissions <- cars$manualtransmissions # discrete
fueltankcap <- cars$fueltankcap
passcap <- cars$passcap
lencar <- cars$lencar
wheelbase <- cars$wheelbase
width <- cars$width
Uturn <- cars$Uturn
rearseatroom <- cars$rearseatroom
luggagecap <- cars$luggagecap # missing values
weight <- cars$weight
domestic <- cars$domestic # discrete
cylinders <- as.numeric(cylinders)
mpg <- (cmpg + hmpg)/2
cars_cleaned = subset(cars, select =-c(1,2,3,9,10,22,23,24,16,7,8,26))
cars_numeric <- data.matrix(cars_cleaned, rownames.force = NA)
cars_numeric <- cbind(cars_numeric,mpg)
plot(cmpg, hmpg)
cor(cmpg,hmpg)
cor(cars_numeric, use = "pairwise.complete.obs")
badboys <- cars_numeric[1:length(mpg),c(7,10,15)]
pairs(badboys)
model1 <- step(lm(mpg~1), scope=(~minprice + midprice + maxprice + enginesize + horsepower + rpm + enginerev + fueltankcap + passcap + cylinders + lencar + wheelbase + width + Uturn + rearseatroom + weight + domestic), direction="both")
library(caret)
library(car)
library(olsrr)
library(psych)
cars <- read.table("A17-cars-win.dat", header = FALSE, col.names=c("manufacturer","model","type","minprice","midprice","maxprice", "cmpg", "hmpg", "airbags", "drivetrain", "cylinders", "enginesize", "horsepower", "rpm", "enginerev", "manualtransmissions", "fueltankcap", "passcap", "lencar", "wheelbase", "width", "Uturn", "rearseatroom", "luggagecap", "weight", "domestic"))
library(caret)
library(car)
library(olsrr)
library(psych)
cars <- read.table("A17-cars-win.dat", header = FALSE, col.names=c("manufacturer","model","type","minprice","midprice","maxprice", "cmpg", "hmpg", "airbags", "drivetrain", "cylinders", "enginesize", "horsepower", "rpm", "enginerev", "manualtransmissions", "fueltankcap", "passcap", "lencar", "wheelbase", "width", "Uturn", "rearseatroom", "luggagecap", "weight", "domestic"))
MSEP <- function(factors, dt) {
sqsum <- 0
N <- dim(dt)[1]
for (i in 1:N) {
excluded_obs <- dt[i,]
excluded_mpg <- (excluded_obs[7] + excluded_obs[8])/2
if (is.na(excluded_obs[1])== FALSE) {
new_dt <- dt
new_dt[i,] <- NA
manufacturer <- new_dt$manufacturer
car_model <- new_dt$model
type <- new_dt$type
minprice <- new_dt$minprice
midprice <- new_dt$midprice
maxprice <- new_dt$maxprice
cmpg <- new_dt$cmpg
hmpg <- new_dt$hmpg
airbags <- new_dt$airbags # discrete
drivetrain <- new_dt$drivetrain # discrete
cylinders <- new_dt$cylinders # missing values
enginesize <- new_dt$enginesize
horsepower <- new_dt$horsepower
rpm <- new_dt$rpm
enginerev <- new_dt$enginerev
manualtransmissions <- new_dt$manualtransmissions # discrete
fueltankcap <- new_dt$fueltankcap
passcap <- new_dt$passcap
lencar <- new_dt$lencar
wheelbase <- new_dt$wheelbase
width <- new_dt$width
Uturn <- new_dt$Uturn
rearseatroom <- new_dt$rearseatroom
luggagecap <- new_dt$luggagecap # missing values
weight <- new_dt$weight
domestic <- new_dt$domestic # discrete
mpg <- (cmpg + hmpg)/2
modelform <- as.formula(paste("mpg~", paste(factors, collapse="+")))
model <- lm(modelform, data=new_dt, na.action = na.omit)
coef <- coefficients(model)
est_val <- coef[1]
for (j in 1:length(factors)) {
est_val <- est_val + coef[j + 1]*excluded_obs[which(colnames(dt)==factors[j])]
}
sqsum <- sqsum + (excluded_mpg-est_val)^2
}
}
MSEP <- sqsum/N
print(paste("mpg~", paste(factors, collapse="+")))
print(MSEP[1,])
}
manufacturer <- cars$manufacturer
car_model <- cars$model
type <- cars$type
minprice <- cars$minprice
midprice <- cars$midprice
maxprice <- cars$maxprice
cmpg <- cars$cmpg
hmpg <- cars$hmpg
airbags <- cars$airbags # discrete
drivetrain <- cars$drivetrain # discrete
cylinders <- cars$cylinders # missing values
enginesize <- cars$enginesize
horsepower <- cars$horsepower
rpm <- cars$rpm
enginerev <- cars$enginerev
manualtransmissions <- cars$manualtransmissions # discrete
fueltankcap <- cars$fueltankcap
passcap <- cars$passcap
lencar <- cars$lencar
wheelbase <- cars$wheelbase
width <- cars$width
Uturn <- cars$Uturn
rearseatroom <- cars$rearseatroom
luggagecap <- cars$luggagecap # missing values
weight <- cars$weight
domestic <- cars$domestic # discrete
cylinders <- as.numeric(cylinders)
mpg <- (cmpg + hmpg)/2
cars_cleaned = subset(cars, select =-c(1,2,3,9,10,22,23,24,16,7,8,26))
cars_numeric <- data.matrix(cars_cleaned, rownames.force = NA)
cars_numeric <- cbind(cars_numeric,mpg)
plot(cmpg, hmpg)
cor(cmpg,hmpg)
cor(cars_numeric, use = "pairwise.complete.obs")
badboys <- cars_numeric[1:length(mpg),c(7,10,15)]
pairs(badboys)
model1 <- step(lm(mpg~1), scope=(~minprice + midprice + maxprice + enginesize + horsepower + rpm + enginerev + fueltankcap + passcap + cylinders + lencar + wheelbase + width + Uturn + rearseatroom + weight + domestic), direction="both")
summary(model1)
vif(model1)
model2 <- lm(mpg ~ wheelbase + fueltankcap + passcap +
enginerev + minprice + domestic, data = cars)
summary(model2)
par(mfrow=c(2,2))
plot(model2)
vif(model2)
model3 <- lm(mpg ~ wheelbase + fueltankcap + passcap +
enginerev + minprice + domestic, data = cars)
summary(model3)
vif(model3)
par(mfrow=c(2,2))
plot(model3)
model3 <- lm(mpg ~ wheelbase + fueltankcap + passcap +
enginerev + minprice + domestic, data = cars)
summary(model3)
vif(model3)
cars <- cars[-c(39,42),]
manufacturer <- cars$V1
car_model <- cars$V2
type <- cars$V3
minprice <- cars$V4
midprice <- cars$V5
maxprice <- cars$V6
cmpg <- cars$V7
hmpg <- cars$V8
airbags <- cars$V9 # discrete
drivetrain <- cars$V10 # discrete
cylinders <- cars$V11 # missing values
enginesize <- cars$V12
horsepower <- cars$V13
rpm <- cars$V14
enginerev <- cars$V15
manualtransmissions <- cars$V16 # discrete
fueltankcap <- cars$V17
passcap <- cars$V18
lencar <- cars$V19
wheelbase <- cars$V20
width <- cars$V21
Uturn <- cars$V22
rearseatroom <- cars$V23
luggagecap <- cars$V24 # missing values
weight <- cars$V25
domestic <- cars$V26 # discrete
mpg <- (cmpg + hmpg)/2
model4 <- lm(mpg ~ fueltankcap + passcap +
enginerev + minprice + domestic, data = cars)
cars <- cars[-c(39,42),]
manufacturer <- cars$manufacturer
car_model <- cars$model
type <- cars$type
minprice <- cars$minprice
midprice <- cars$midprice
maxprice <- cars$maxprice
cmpg <- cars$cmpg
hmpg <- cars$hmpg
airbags <- cars$airbags # discrete
drivetrain <- cars$drivetrain # discrete
cylinders <- cars$cylinders # missing values
enginesize <- cars$enginesize
horsepower <- cars$horsepower
rpm <- cars$rpm
enginerev <- cars$enginerev
manualtransmissions <- cars$manualtransmissions # discrete
fueltankcap <- cars$fueltankcap
passcap <- cars$passcap
lencar <- cars$lencar
wheelbase <- cars$wheelbase
width <- cars$width
Uturn <- cars$Uturn
rearseatroom <- cars$rearseatroom
luggagecap <- cars$luggagecap # missing values
weight <- cars$weight
domestic <- cars$domestic # discrete
mpg <- (cmpg + hmpg)/2
model4 <- lm(mpg ~ fueltankcap + passcap +
enginerev + minprice + domestic, data = cars)
summary(model4)
vif(model4)
par(mfrow=c(2,2))
plot(model4)
MSEP(c("width"), cars)
MSEP(c("weight","wheelbase","fueltankcap","passcap","enginerev","minprice","domestic"), cars)
MSEP(c( "wheelbase", "fueltankcap", "passcap",
"enginerev","minprice", "domestic"), cars)
library(caret)
library(car)
library(olsrr)
library(psych)
cars <- read.table("A17-cars-win.dat", header = FALSE, col.names=c("manufacturer","model","type","minprice","midprice","maxprice", "cmpg", "hmpg", "airbags", "drivetrain", "cylinders", "enginesize", "horsepower", "rpm", "enginerev", "manualtransmissions", "fueltankcap", "passcap", "lencar", "wheelbase", "width", "Uturn", "rearseatroom", "luggagecap", "weight", "domestic"))
library(caret)
library(car)
library(olsrr)
library(psych)
cars <- read.table("A17-cars-win.dat", header = FALSE, col.names=c("manufacturer","model","type","minprice","midprice","maxprice", "cmpg", "hmpg", "airbags", "drivetrain", "cylinders", "enginesize", "horsepower", "rpm", "enginerev", "manualtransmissions", "fueltankcap", "passcap", "lencar", "wheelbase", "width", "Uturn", "rearseatroom", "luggagecap", "weight", "domestic"))
library(caret)
library(car)
library(olsrr)
library(psych)
cars <- read.table("A17-cars-win.dat", header = FALSE, col.names=c("manufacturer","model","type","minprice","midprice","maxprice", "cmpg", "hmpg", "airbags", "drivetrain", "cylinders", "enginesize", "horsepower", "rpm", "enginerev", "manualtransmissions", "fueltankcap", "passcap", "lencar", "wheelbase", "width", "Uturn", "rearseatroom", "luggagecap", "weight", "domestic"))
MSEP <- function(factors, dt) {
sqsum <- 0
N <- dim(dt)[1]
for (i in 1:N) {
excluded_obs <- dt[i,]
excluded_mpg <- (excluded_obs[7] + excluded_obs[8])/2
if (is.na(excluded_obs[1])== FALSE) {
new_dt <- dt
new_dt[i,] <- NA
manufacturer <- new_dt$manufacturer
car_model <- new_dt$model
type <- new_dt$type
minprice <- new_dt$minprice
midprice <- new_dt$midprice
maxprice <- new_dt$maxprice
cmpg <- new_dt$cmpg
hmpg <- new_dt$hmpg
airbags <- new_dt$airbags # discrete
drivetrain <- new_dt$drivetrain # discrete
cylinders <- new_dt$cylinders # missing values
enginesize <- new_dt$enginesize
horsepower <- new_dt$horsepower
rpm <- new_dt$rpm
enginerev <- new_dt$enginerev
manualtransmissions <- new_dt$manualtransmissions # discrete
fueltankcap <- new_dt$fueltankcap
passcap <- new_dt$passcap
lencar <- new_dt$lencar
wheelbase <- new_dt$wheelbase
width <- new_dt$width
Uturn <- new_dt$Uturn
rearseatroom <- new_dt$rearseatroom
luggagecap <- new_dt$luggagecap # missing values
weight <- new_dt$weight
domestic <- new_dt$domestic # discrete
mpg <- (cmpg + hmpg)/2
modelform <- as.formula(paste("mpg~", paste(factors, collapse="+")))
model <- lm(modelform, data=new_dt, na.action = na.omit)
coef <- coefficients(model)
est_val <- coef[1]
for (j in 1:length(factors)) {
est_val <- est_val + coef[j + 1]*excluded_obs[which(colnames(dt)==factors[j])]
}
sqsum <- sqsum + (excluded_mpg-est_val)^2
}
}
MSEP <- sqsum/N
print(paste("mpg~", paste(factors, collapse="+")))
print(MSEP[1,])
}
